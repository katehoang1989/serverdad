#!/bin/bash

# Get the dir of this file
FILE="$( cd "$(dirname "$0")" ; pwd -P )"

ENVFILE=$FILE/.env

# Get user DIR
USERDIR=$(eval echo ~$USER)

#Var to be filled
APPDIR=$USERDIR/apps
TRANSCODEDIR=$USERDIR/transcode
LOCALMEDIADIR=$USERDIR/local_media
MOVIEDIR=$USERDIR/movies
TVDIR=$USERDIR/tv_shows
DOWNLOADDIR=$USERDIR/local_media/downloads

if [ -f "$FILE/../.env" ]
then
	exit
else
	echo ""
	echo "No .env file found, would you like to initiate Serverdad? (y/n) "
        printf "> "
	read answer

	echo ""

	if [ "$answer" != "${answer#[Yy]}" ]
	then
		###########################
		# First setup folders
		###########################

		echo "Creating Directories"
		echo "--------------------"

		echo "#Directories" >> $ENVFILE

		#APP Folder
		printf "Checking for App Folder"
		if [ ! -d "$APPDIR" ]
		then
			printf " - Creating Folder\n"
			mkdir $APPDIR
                else
                        printf " - Already Exists\n"
		fi
		echo ""
		echo "APPDIR=$APPDIR" >> $ENVFILE

                #Transcode Folder
                printf "Checking for Transcode Folder"
                if [ ! -d "$TRANSCODEDIR" ]
                then
			printf " - Creating Folder\n"
                        mkdir $TRANSCODEDIR
                else
                        printf " - Already Exists\n"
                fi
		echo ""
                echo "TRANSCODEDIR=$TRANSCODEDIR" >> $ENVFILE

		#Local Media Folder
		printf "Checking for Local Media Folder"
                if [ ! -d "$LOCALMEDIADIR" ]
                then
			printf " - Creating Folder\n"
                        mkdir $LOCALMEDIADIR
                else
                        printf " - Already Exists\n"
		fi
		echo ""
		echo "LOCALMEDIADIR=$LOCALMEDIADIR" >> $ENVFILE

                #Movies Folder
                printf "Checking for Movies Folder"
                if [ ! -d "$MOVIEDIR" ]
                then
			printf " - Creating Folder\n"
                        mkdir $MOVIEDIR
                else
                        printf " - Already Exists\n"
		fi
		echo ""
		echo "MOVIEDIR=$MOVIEDIR" >> $ENVFILE

                #TV Shows Folder
                printf "Checking for TV Shows Folder"
                if [ ! -d "$TVDIR" ]
                then
                	printf " - Creating Folder\n"
		        mkdir $TVDIR
                else
                        printf " - Already Exists\n"
		fi
		echo ""
                echo "TVDIR=$TVDIR" >> $ENVFILE

                #Downloads Folder
                printf "Checking for Downloads Folder"
                if [ ! -d "$DOWNLOADDIR" ]
                then
			printf " - Creating Folders\n"
                        mkdir $DOWNLOADDIR
			mkdir $DOWNLOADDIR/complete
			mkdir $DOWNLOADDIR/incomplete
                else
			printf " - Already Exist\n"
		fi
		echo ""
		echo "DOWNLOADDIR=$DOWNLOADDIR" >> $ENVFILE

		echo "" >> $ENVFILE

                ###########################
                # Add Other Variables
                ###########################

		echo ""
		echo "Adding docker-compose variables"
		echo "-------------------------------"
		#Add user id's
		echo "#User ID's" >> $ENVFILE
		echo "PUID=$(id -u)" | tee -a $ENVFILE
		echo "PGID=$(id -u)" | tee -a $ENVFILE
		echo "" >> $ENVFILE

		#Add Timezone
		echo "#Timezone" >> $ENVFILE
		echo "TZ=America/Denver" | tee -a $ENVFILE
		echo "" >> $ENVFILE

		#Add Container Ports
		echo "#Container Ports" >> $ENVFILE
		echo "COUCHCPORT=5050" | tee -a $ENVFILE
		echo "OMBICPORT=3579" | tee -a $ENVFILE
		echo "SICKCPORT=8081" | tee -a $ENVFILE
		echo "TAUTULLICPORT=8181" | tee -a $ENVFILE
		echo "TRANSMISSIONCPORT=9091" | tee -a $ENVFILE
		echo "TRANSMISSIONPROXY=8080" | tee -a $ENVFILE
		echo "" >> $ENVFILE

		#Add Host Ports
		echo "#Host Ports" >> $ENVFILE
		echo "TRANSMISSIONHPORT=8080" | tee -a $ENVFILE
		echo "SICKHPORT=8081" | tee -a $ENVFILE
		echo "TAUTULLIHPORT=8082" | tee -a $ENVFILE
		echo "COUCHHPORT=8083" | tee -a $ENVFILE
		echo "OMBIHPORT=8084" | tee -a $ENVFILE
		echo "" >> $ENVFILE

                ###########################
                # Setup Cron Jobs
                ###########################
		echo ""
		echo "Cron Jobs:"
		echo "----------"
		echo "Would you like to setup the sleep job? (y/n)"
		printf "> "
		read answer

	        if [ "$answer" != "${answer#[Yy]}" ]
        	then
			#add to the crontab
			echo "Sleep job added to crontab!"
		fi

                echo "Would you like to setup the update job? (y/n)"
                printf "> "
                read answer

                if [ "$answer" != "${answer#[Yy]}" ]
                then
                        #add to the crontab
                        echo "Update job added to crontab!"
                fi

		echo ""
		echo "Setup Gdrive"
		echo "------------"
		echo "Would you like to setup Gdrive now? (y/n)"
		printf "> "
		read answer

		if [ "$answer" != "${answer#[Yy]}" ]
		then
			cp $FILE/gdrive-linux-arm64 ../gdrive
			$FILE ../gdrive -a
		fi

                ###########################
                # Setup App Password
                ###########################
		echo ""
		echo "Application Password:"
		echo "---------------------"
		echo "Enter a password for your applications"
		printf "> "
		read -s pass

		echo "#password" >> $ENVFILE
		echo "TRANSMISSIONPASS='$pass'" >> $ENVFILE

                ###########################
                # Move .env File
                ###########################

		mv $ENVFILE $FILE/..

	else
		echo "Serverdad will not function without a .env file. Please provide your own or go though initilization"
	fi
fi

echo ""
echo ""
